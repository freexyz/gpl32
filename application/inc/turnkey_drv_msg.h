/*Pseudo Header*/
#define MSG_AUDIO_BASE              0x10000100
#define MSG_IMAGE_TASK_BASE         0x10000200
#define MSG_PPU_BASE             	0x10000300
#define MSG_SYSTEM_BASE             0x10000500
#define MSG_FILESRV_BASE            0x10000600
#define MSG_AUDIO_DAC_BASE          0x10000700
#define MSG_USER_TIMER_BASE			0x10000800
#define MSG_RETURN_STATUS_BASE		0x10000900
#define MSG_ICONSHOW_BASE           0x20000100
#define MSG_JPEG_HANDLE_BASE        0x20000300
#define MSG_AVISHOW_BASE			0x20000400

typedef enum
{
	MSG_AVI_TICKER = MSG_AVISHOW_BASE,
	MSG_AVI_AUDIO_END,
	MSG_AVI_MJPEG_END,
	MSG_AVI_DECODE_END,
	MSG_AVI_PARSE_HEADER,
	MSG_AVI_STATUS_CHECK,
	MSG_AVI_PLAY,
	MSG_AVI_STOP,
	MSG_AVI_PAUSE,
	MSG_AVI_RESUME,
	MSG_AVI_ERROR,
	MSG_AVI_PLUGOUT,
	MSG_AVI_DISPLAYSIZE_CHANGE,
	MSG_AVI_MAX,
	MSG_START_AVI_STOP,
	MSG_AVI_VOLUME_DOWN,
	MSG_AVI_VOLUME_UP

}MSG_AVI_ENUM;

typedef enum
{
    MSG_AUD_PLAY=MSG_AUDIO_BASE,
    MSG_AUD_PLAY_BY_SPI,//0x10000101
    MSG_AUD_MIDI_PLAY,//0x10000102
    MSG_AUD_PAUSE,//0x10000103
    MSG_AUD_STOP,//0x10000104
    MSG_AUD_RESUME,//0x10000105
    MSG_AUD_AVI_PLAY,//0x10000106
    MSG_AUD_SET_MUTE,//0x10000107
    MSG_AUD_VOLUME_SET,//0x10000108
    MSG_AUD_DECODE_NEXT_FRAME,//0x10000109
    MSG_AUD_SPU_RESTART,//0x1000010a
    MSG_AUD_PLAY_RES,//0x10000100
    MSG_AUD_PLAY_SPI_RES,//0x1000010b
    MSG_AUD_STOP_RES,//0x1000010c
    MSG_AUD_PAUSE_RES,//0x1000010d
    MSG_AUD_RESUME_RES,//0x1000010e
    MSG_AUD_MUTE_SET_RES,//0x10000110
    MSG_AUD_VOLUME_SET_RES,//0x10000111
    MSG_AUD_BG_PLAY_RES,//0x10000112
    MSG_AUD_BG_PLAY_SPI_RES,//0x10000113
    MSG_AUD_BG_STOP_RES,//0x10000114
    MSG_AUD_BG_PAUSE_RES,
    MSG_AUD_BG_RESUME_RES,
    MSG_AUD_START_SAMPLES_COUNT,
    MSG_AUD_PLAY_TIME_GET_START,
    MSG_AUD_PLAY_TIME_GET_END,
    MSG_AUD_PLAY_TIME_RES,
    MSG_AUD_ALL_FILE_ERR,
    MSG_AUD_MAX
} MSG_AUD_ENUM;

typedef enum
{
    MSG_ICON_DECODE=MSG_ICONSHOW_BASE,
    MSG_ICON_DECODE_ERR,
    MSG_ICON_AVI_DECODE,
    MSG_ICON_INSERT,
    MSG_ICON_CFG,
    MSG_ICON_HANDOVER,
    MSG_ICON_FLY_FILL,
    MSG_ICON_REMOVE,
    MSG_ICON_FS_WAIT,
    MSG_ICON_RING_BUF_UPDATE,
    MSG_ICON_RING_BUF_REG_TO_SPRITE_IMG,
    MSG_ICON_SLIDE_WIN_CFG,
    MSG_ICON_RUNTIME_DISPLAY,
    MSG_ICON_ERROR_SHOW,
    MSG_ICON_KEY_SELECT_MOTION,
    MSG_ICON_IMAGE_FS_SCAN,
    MSG_ICON_SW_TIMER_ISR,
    MSG_ICON_MIRROR_STATE,
    MSG_ICON_MAX
} MSG_ICONSHOW_ENUM;

typedef enum
{
    MSG_MJPEG_DECODE_OK=MSG_JPEG_HANDLE_BASE,
    MSG_MJPEG_DECODE_FAIL,
    MSG_MJPEG_DECODE_STATUS,
    MSG_JPEG_DECODE_MAX
} MSG_MJPEG_DECODE_ENUM;

typedef enum
{
	// Request
    MSG_IMAGE_PARSE_HEADER_REQ = MSG_IMAGE_TASK_BASE,
    MSG_IMAGE_DECODE_REQ,
    MSG_IMAGE_ENCODE_REQ,
    MSG_IMAGE_DECODE_EXT_REQ,
    MSG_IMAGE_SCALE_REQ,
    MSG_MJPEG_PARSE_HEADER_REQ,
    MSG_MJPEG_DECODE,
    MSG_MJPEG_DECODE_1,
    MSG_IMAGE_STOP_REQ,
    MSG_IMAGE_REQUEST_MAX,
	// Reply
	MSG_IMAGE_PARSE_HEADER_REPLY,
	MSG_IMAGE_DECODE_REPLY,
	MSG_IMAGE_ENCODE_REPLY,
	MSG_IMAGE_DECODE_EXT_REPLY,
	MSG_IMAGE_SCALE_REPLY,
	MSG_MJPEG_PARSE_HEADER_REPLY,
    MSG_IMAGE_STOP_REPLY,
	MSG_IMAGE_REPLY_MAX
} MSG_IMAGE_TASK_ENUM;

typedef enum
{
    MSG_SYS_AD_KEY=MSG_SYSTEM_BASE,
    MSG_SYS_UART_KEY,
    MSG_SYS_IR_KEY,
    MSG_SYS_ITOUCH_KEY,
    MSG_SYS_KEY_POWER,
    MSG_SYS_LOW_BATTERY,
    MSG_SYS_RTC,
    MSG_SYS_ALARM,
    MSG_SYS_HALT,
    MSG_SYS_CARD_PLUG_CHANGE,
    MSG_SYS_QUERY_CARD_EXIST,
    MSG_SYS_STORAGE_SCAN_START,
    MSG_SYS_STORAGE_SCAN_DONE,
    MSG_SYS_STORAGE_INIT,
    MSG_SYS_ERROR,
    MSG_SYS_USBD_PLUG_CHANGE,
    MSG_SYS_NAUGHTY_EVENT,
    MSG_SYS_USBD,
    MSG_SYS_USBH,
    MSG_SYS_ADAPTER_PLUG,
    MSG_SYS_BATTERY_CHECK,
    MSG_SYS_MAX
} MSG_SYS_ENUM;


typedef enum
{
    MSG_FILESRV_FS_READ=MSG_FILESRV_BASE,
    MSG_FILESRV_NVRAM_AUDIO_GPRS_READ,
    MSG_FILESRV_NVRAM_AUDIO_APP_READ,
    MSG_FILESRV_NVRAM_AUDIO_APP_PACKED_READ,
    MSG_FILESRV_SPI_L3_READ,
    MSG_FILESRV_SPI_L3_FAST_READ,
    MSG_FILESRV_FLUSH,
    MSG_FILESRV_FLUSH_DONE,
    MSG_FILESRV_SCAN,
    MSG_FILESRV_SCAN_CONTINUE,
    MSG_FILESRV_MOUNT,
    MSG_FILESRV_SORTING,
    MSG_FILESRV_DEL,     /*RFU*/
    MSG_FILESRV_COPY,    /*RFU*/
    MSG_FILESRV_MOVE,    /*RFU*/
    MSG_FILESRV_RENAME,  /*RFU*/
    MSG_FILESRV_OPEN,    /*RFU*/
    MSG_FILESRV_CLOSE,   /*RFU*/
    MSG_FILESRV_SAVE,    /*RFU*/
    MSG_FILESRV_AVIAUDIO_FS_READ,  /*avi use only */
    MSG_FILESRV_USER_DEFINE_READ,	// added by Bruce, 2008/10/27
    MSG_FILESRV_AVIVIDEO_FS_READ,  /*avi use only */
    // reply
    MSG_FILESRV_COPY_REPLY,
    MSG_FILESRV_DELETE_REPLY,
    MSG_FILESRV_SAVE_REPLY,
    MSG_FILESRV_MAX   /*RFU*/
} MSG_FILESRV_ENUM;

typedef enum
{
    MSG_AUD_DMA_DBF_START=MSG_AUDIO_DAC_BASE,
    MSG_AUD_DMA_DBF_DONE,
    MSG_AUD_DMA_DBF_RESTART,
    MSG_AUD_DMA_WIDX_CLEAR,
    MSG_AUD_RAMP_DOWN_START,
    MSG_AUD_SPU_WIDX_CLEAR,
    MSG_AUD_SPU_WIDX_SET,
    MSG_AUD_SPU_SOFTCH_START,
    MSG_AUD_SPU_LEFT_DONE,
    MSG_AUD_SPU_RIGHT_DONE,
    MSG_AUD_DMA_PAUSE,
    MSG_AUD_DAC_MAX
} MSG_AUD_DAC_ENUM;

typedef enum
{
    MSG_USER_TIMER0=MSG_USER_TIMER_BASE,
    MSG_USER_TIMER1,
    MSG_USER_TIMER2,
    MSG_USER_TIMER3,
    MSG_USER_TIMER4,
    MSG_PSEUDO_TIMER,
    MSG_AUTO_DEMO_TIMER,
    MSG_AUTO_DEMO_STOP,
    MSG_OSD_MENU_TIMER,
    MSG_INTERROG_MOTION_TIMER,
    #if SETUP_SUPPORT_AUTO_PET==CUSTOM_ON
    MSG_AUTO_PET_TIMER,
    #endif
    MSG_LOADING_ANIMATION_TIMER,
    MSG_MUSIC_CHANGE_TIMER,
    MSG_MUSIC_CHANGE_DELAY_TIMER,
    MSG_USER_TIMER_MAX
} MSG_USER_TIMER_ENUM;

typedef enum
{
	MSG_SLIDE_SHOW_NEXT_TICK = MSG_RETURN_STATUS_BASE,
	MSG_ROTATE_SENSOR,
	MSG_SEND_PARSE_HEADER,
	MSG_RETURN_STATUS_MAX
} MSG_RETURN_STATUS_ENUM;

